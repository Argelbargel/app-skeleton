plugins {
    id("base")
    id("com.github.node-gradle.node").version("2.2.4")
}

group("com.github.argelbargel")


ext {
    def os = org.gradle.nativeplatform.platform.internal.DefaultNativePlatform.currentOperatingSystem
    osName = "unknown"
    if (os.linux) {
        osName = "linux"
    } else if (os.windows) {
        osName = "win"
    }

    if (System.env.JAVA_HOME == null || !file(System.env.JAVA_HOME).exists()) {
        logger.warn("JAVA_HOME is not set or not present at '${System.env.JAVA_HOME}'!")
    }

    userHomeDir= System.properties['user.home']
    androidProjectSdkRootDir = "${gradle.gradleUserHomeDir}/android-sdk"
    androidSdkHomeDir = file(androidProjectSdkRootDir).exists() ? androidProjectSdkRootDir : System.env.ANDROID_HOME
    androidSdkRootDir = file(androidProjectSdkRootDir).exists() ? androidProjectSdkRootDir : System.env.ANDROID_SDK_HOME
    androidSdkSystemImage = "system-images;android-${androidVersion};google_apis;x86_64"
    androidSdkPackages = [ 
        "build-tools;${androidBuildToolsVersion}", 
        "platforms;android-${androidVersion}",
        "sources;android-${androidVersion}",
        androidSdkSystemImage
    ]

    nodePluginWorkDir = file("${gradle.gradleUserHomeDir}/nodejs")
    nodeJsInstallDir = "${nodePluginWorkDir}/node-v${nodeVersion}-${osName != 'linux' ? osName : 'linux-x64' }"
    nodeJsBinDir = "${nodeJsInstallDir}/bin"

    cordovaAppDir = "${projectDir}/cordova-app/"
    ionicAppDir = "${projectDir}/ionic-app/"
}

node {
    version = nodeVersion
    download = true
    workDir = nodePluginWorkDir
    npmWorkDir = file("${workDir}/.npm")
}


apply from: "gradle/android-sdk.gradle"
apply from: "gradle/cordova.gradle" 
apply from: "gradle/ionic.gradle" 


tasks.named("assemble").configure {
    if (file(cordovaAppDir).exists()) {
        dependsOn(tasks.named("cordovaBuild"))
    }
}
